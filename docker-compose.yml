version: "1.0"
services:
  # Frontend build (separate from Nginx)
  frontend:
    image: node:18
    working_dir: /app
    volumes:
      - .:/app
      - frontend_build:/app/dist
    command: sh -c "npm install && npm run build"
    environment:
      - NODE_ENV=production

  # Nginx service
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    networks:
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend

  # Backend service
  backend:
    image: consumer-backend:latest
    ports:
      - "8000:8000" # Maps port 8000 of the host to port 8000 of the container
    networks:
      - app-network
    env_file: .env
    environment:
      DB_HOST: mongo
      REDIS_HOST: redis
      DJANGO_SETTINGS_MODULE: mysite.settings
    depends_on:
      - mongo
      - redis

  # MongoDB service
  mongo:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    networks:
      - app-network

  # Redis service
  redis:
    image: redis:latest
    container_name: redis-db
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

# Define a common network for all services
networks:
  app-network:
    driver: bridge

# Define volumes for persistent storage
volumes:
  mongo_data:
  redis_data:
  frontend_build:
